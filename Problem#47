import java.util.Arrays;
import java.util.Collections;
import java.util.Scanner;

/*******
 * @author Basil Gafoor
 * 
 * 
 * Good morning! Here's your coding interview problem for today.
 * This problem was asked by Facebook.
 * Given a array of numbers representing the stock prices of a company in chronological order,
 * write a function that calculates the maximum profit you could have made from buying and selling that stock once.
 * You must buy before you can sell it.
 * For example, given [9, 11, 8, 5, 7, 10], you should return 5, 
 * since you could buy the stock at 5 dollars and sell it at 10 dollars.
 */


public class Problem_47 {

	
	public static void main(String[] args) {
		System.out.println("Enter the number of stock values and the same in its chronological order: ");
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
		int [] arr = new int[n];
		
		for (int i=0;i<n;i++) {
			arr[i] = sc.nextInt();
		}
		System.out.println("The stock were as: "+Arrays.toString(arr));
		int max =0;
		for(int i=0;i<n;i++) {
			for(int j=i+1;j<n;j++) {
				if(arr[j]-arr[i] > max) {
					max = arr[j]-arr[i];
				}
			}
		}
		System.out.println("Max profit from this stock you can earn is: "+max);
	}
}
